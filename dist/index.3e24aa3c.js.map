{"mappings":"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","sources":["src/index.mjs"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", () => {\n  // Image Upload\n  const imageUpload = document.getElementById(\"imageUpload\");\n  const uploadButton = document.getElementById(\"uploadButton\");\n\n  uploadButton.addEventListener(\"click\", async () => {\n    const file = imageUpload.files[0];\n    if (file) {\n      const formData = new FormData();\n      formData.append(\"image\", file);\n\n      try {\n        const response = await fetch(\"YOUR_IMAGE_UPLOAD_ENDPOINT\", {\n          method: \"POST\",\n          body: formData,\n        });\n        const result = await response.json();\n        console.log(result);\n        alert(\"Image uploaded successfully!\");\n      } catch (error) {\n        console.error(\"Upload error:\", error);\n        alert(\"Image upload failed.\");\n      }\n    }\n  });\n\n  // Audio Record API\n  let mediaRecorder;\n  let audioChunks = [];\n  const startRecordButton = document.getElementById(\"startRecordButton\");\n  const stopRecordButton = document.getElementById(\"stopRecordButton\");\n  const audioPlayer = document.getElementById(\"audioPlayer\");\n\n  startRecordButton.addEventListener(\"click\", async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n    mediaRecorder = new MediaRecorder(stream);\n    mediaRecorder.start();\n    mediaRecorder.ondataavailable = (event) => {\n      audioChunks.push(event.data);\n    };\n    startRecordButton.disabled = true;\n    stopRecordButton.disabled = false;\n  });\n\n  stopRecordButton.addEventListener(\"click\", () => {\n    mediaRecorder.stop();\n    mediaRecorder.onstop = () => {\n      const audioBlob = new Blob(audioChunks);\n      audioPlayer.src = URL.createObjectURL(audioBlob);\n      audioChunks = [];\n      startRecordButton.disabled = false;\n      stopRecordButton.disabled = true;\n    };\n  });\n\n  // Location API\n  const getLocationButton = document.getElementById(\"getLocationButton\");\n  const locationDisplay = document.getElementById(\"locationDisplay\");\n\n  getLocationButton.addEventListener(\"click\", () => {\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        locationDisplay.textContent = `Latitude: ${position.coords.latitude}, Longitude: ${position.coords.longitude}`;\n      },\n      (error) => {\n        locationDisplay.textContent = `Error: ${error.message}`;\n      },\n    );\n  });\n\n  // Clipboard API\n  const clipboardInput = document.getElementById(\"clipboardInput\");\n  const copyButton = document.getElementById(\"copyButton\");\n  const pasteButton = document.getElementById(\"pasteButton\");\n\n  copyButton.addEventListener(\"click\", async () => {\n    if (navigator.clipboard) {\n      await navigator.clipboard.writeText(clipboardInput.value);\n      alert(\"Copied to clipboard!\");\n    }\n  });\n\n  pasteButton.addEventListener(\"click\", async () => {\n    if (navigator.clipboard) {\n      const text = await navigator.clipboard.readText();\n      clipboardInput.value = text;\n      alert(\"Pasted from clipboard!\");\n    }\n  });\n});\n\n// ... rest of your JavaScript above ...\n\n// Image Upload and Preview\nconst imageUpload = document.getElementById(\"imageUpload\");\nconst imagePreview = document.getElementById(\"imagePreview\");\n\nimageUpload.addEventListener(\"change\", () => {\n  const file = imageUpload.files[0];\n  if (file) {\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      imagePreview.src = e.target.result;\n      imagePreview.style.display = \"block\";\n    };\n    reader.readAsDataURL(file);\n  }\n});\n\n// ... rest of your JavaScript below ...\n\n// Camera API\nconst cameraPreview = document.getElementById(\"cameraPreview\");\nconst captureButton = document.getElementById(\"captureButton\");\nconst snapshotCanvas = document.getElementById(\"snapshotCanvas\");\nconst snapshotContext = snapshotCanvas.getContext(\"2d\");\n\nfunction handleCameraStream(stream) {\n  cameraPreview.srcObject = stream;\n  cameraPreview.play();\n}\n\nfunction handleCameraError(error) {\n  console.error(\"Camera error:\", error);\n}\n\nnavigator.mediaDevices\n  .getUserMedia({ video: true })\n  .then(handleCameraStream)\n  .catch(handleCameraError);\n\ncaptureButton.addEventListener(\"click\", () => {\n  snapshotContext.drawImage(\n    cameraPreview,\n    0,\n    0,\n    snapshotCanvas.width,\n    snapshotCanvas.height,\n  );\n  const imageDataUrl = snapshotCanvas.toDataURL(\"image/png\");\n\n  // You can now use imageDataUrl to display the image or upload it\n  // For example, to display the captured image:\n  imagePreview.src = imageDataUrl;\n  imagePreview.style.display = \"block\";\n});\n\n// ... rest of your JavaScript below ...\n"],"names":[],"version":3,"file":"index.3e24aa3c.js.map","sourceRoot":"/__parcel_source_root/"}